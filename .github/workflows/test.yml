name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  changed:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      schaltwerk: ${{ steps.filter.outputs.schaltwerk }}
      workflows: ${{ steps.filter.outputs.workflows }}
    steps:
      - uses: actions/checkout@v5

      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            schaltwerk:
              - 'src/**'
              - 'src-tauri/**'
              - 'mcp-server/**'
              - 'scripts/**'
              - 'package.json'
              - 'bun.lock'
              - 'justfile'
              - 'tsconfig.json'
              - 'vitest.config.ts'
              - 'vite.config.ts'
              - 'postcss.config.js'
              - 'tailwind.config.js'
              - 'eslint.config.js'
              - 'eslint-rules/**'
            workflows:
              - '.github/workflows/**'

  lint-typescript:
    name: TypeScript Lint & Format
    runs-on: ubuntu-latest
    needs: changed
    if: ${{ needs.changed.outputs.schaltwerk == 'true' || needs.changed.outputs.workflows == 'true' || github.event_name == 'push' }}
    env:
      SCHALTWERK_PM: bun
    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: '1.2.16'

      - name: Install dependencies
        run: |
          node scripts/package-manager.mjs install --frozen-lockfile
          if [ -d "mcp-server" ]; then
            cd mcp-server && node ../scripts/package-manager.mjs install --frozen-lockfile && cd ..
          fi

      - name: Run TypeScript lints
        run: |
          node scripts/package-manager.mjs run lint
          node scripts/package-manager.mjs run lint:ts
          node scripts/package-manager.mjs run lint:mcp

  test-frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest
    needs: changed
    if: ${{ needs.changed.outputs.schaltwerk == 'true' || needs.changed.outputs.workflows == 'true' || github.event_name == 'push' }}
    env:
      SCHALTWERK_PM: bun
    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: '1.2.16'

      - name: Install dependencies
        run: |
          node scripts/package-manager.mjs install --frozen-lockfile
          if [ -d "mcp-server" ]; then
            cd mcp-server && node ../scripts/package-manager.mjs install --frozen-lockfile && cd ..
          fi

      - name: Run frontend tests
        run: |
          node scripts/package-manager.mjs run test:frontend
          node scripts/package-manager.mjs run test:mcp

  rust-checks:
    name: Rust Checks
    runs-on: ubuntu-latest
    needs: changed
    if: ${{ needs.changed.outputs.schaltwerk == 'true' || needs.changed.outputs.workflows == 'true' || github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v5

      - name: Cache apt packages
        uses: actions/cache@v4
        id: apt-cache
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-${{ hashFiles('.github/workflows/test.yml') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libgtk-3-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Restore cargo home cache
        id: cache_cargo_home_restore
        if: ${{ !env.ACT }}
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: cargo-home-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Install cargo tools
        run: |
          cargo install cargo-shear || true
          cargo install cargo-nextest --locked || true

      - name: Run Rust checks
        run: |
          cd src-tauri
          cargo clippy --all-features -- -D warnings
          cargo shear
          cargo nextest run --all-features --status-level fail --failure-output immediate
          cargo build

      - name: Save cargo home cache
        if: always() && !cancelled() && steps.cache_cargo_home_restore.outputs.cache-hit != 'true' && !env.ACT
        continue-on-error: true
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: cargo-home-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}

  results:
    name: CI Results (required)
    needs: [changed, lint-typescript, test-frontend, rust-checks]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Check all jobs
        shell: bash
        run: |
          echo "lint-typescript: ${{ needs.lint-typescript.result }}"
          echo "test-frontend  : ${{ needs.test-frontend.result }}"
          echo "rust-checks    : ${{ needs.rust-checks.result }}"
          
          # If no relevant changes, succeed
          if [[ '${{ needs.changed.outputs.schaltwerk }}' != 'true' && '${{ needs.changed.outputs.workflows }}' != 'true' && '${{ github.event_name }}' != 'push' ]]; then
            echo 'No relevant changes -> CI passed.'
            exit 0
          fi
          
          # All jobs must succeed
          [[ '${{ needs.lint-typescript.result }}' == 'success' ]] || { echo 'lint-typescript failed'; exit 1; }
          [[ '${{ needs.test-frontend.result }}' == 'success' ]] || { echo 'test-frontend failed'; exit 1; }
          [[ '${{ needs.rust-checks.result }}' == 'success' ]] || { echo 'rust-checks failed'; exit 1; }
          
          echo 'All checks passed!'
